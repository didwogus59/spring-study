# # JPA
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=update

#MongoDB
spring.data.mongodb.database = spring
spring.data.mongodb.uri= ${MONGO_URL}


#PORT
server.port = ${PORT}

spring.thymeleaf.cache= false
spring.devtools.restart.enabled = true

server.ssl.enabled = true
server.ssl.key-store = classpath:bootsecurity.p12
server.ssl.key-store-password= aaaaaa
server.ssl.key-store-type= PKCS12
server.ssl.key-alias= bootsecurity

spring.security.oauth2.client.registration.google.client-id=${google_client_id}
spring.security.oauth2.client.registration.google.client-secret=${google_client_password}
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.naver.client-id=${naver_client_id}
spring.security.oauth2.client.registration.naver.client-secret=${naver_client_password}
spring.security.oauth2.client.registration.naver.scope=email,name
spring.security.oauth2.client.registration.naver.client-name = Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=https://localhost:5000/login/oauth2/code/naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
#회원정보는 json인데 key값이 response


spring.session.store-type=redis

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.output.ansi.enabled=always